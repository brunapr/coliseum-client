{"ast":null,"code":"var _jsxFileName = \"/home/gabriela/Documentos/EJCM/React/Coliseum-Cliente/src/pages/Register/index.tsx\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Container, Content, Title, InputBox, InputLabel } from \"../styles\";\nimport { SubmitButton, Input } from \"./styles\";\nexport default function Register() {\n  var _this = this;\n\n  var _useForm = useForm({\n    mode: 'onTouched'\n  }),\n      control = _useForm.control,\n      getValues = _useForm.getValues,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n\n  var onError = function onError(errors) {\n    console.log(errors);\n  };\n\n  var navigation = useNavigation();\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Crie sua conta\"), React.createElement(InputBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Nome\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref) {\n      var onBlur = _ref.onBlur,\n          onChange = _ref.onChange,\n          value = _ref.value;\n      return React.createElement(Input, {\n        autoCompleteType: \"name\",\n        autoCorrect: false,\n        textContentType: \"name\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'O nome é obrigatório.'\n    },\n    name: \"name\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), errors.name && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }, errors.name.message)), React.createElement(InputBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"E-mail\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(Input, {\n        autoCompleteType: \"email\",\n        autoCorrect: false,\n        keyboardType: \"email-address\",\n        textContentType: \"emailAddress\",\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'O e-mail é obrigatório.',\n      pattern: {\n        value: /^\\S+@\\S+$/i,\n        message: 'Formato de e-mail inválido.'\n      }\n    },\n    name: \"email\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), errors.email && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 38\n    }\n  }, errors.email.message)), React.createElement(InputBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Telefone\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(Input, {\n        autoCompleteType: \"tel\",\n        autoCorrect: false,\n        keyboardType: \"phone-pad\",\n        textContentType: \"telephoneNumber\",\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'O telefone é obrigatório.'\n    },\n    name: \"phoneNumber\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), errors.phoneNumber && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 44\n    }\n  }, errors.phoneNumber.message)), React.createElement(InputBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Senha\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(Input, {\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        textContentType: \"newPassword\",\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'A senha é obrigatória.'\n    },\n    name: \"password\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), errors.password && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  }, errors.password.message)), React.createElement(InputBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Confirma\\xE7\\xE3o de senha\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(Input, {\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        textContentType: \"password\",\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }\n      });\n    },\n    rules: {\n      required: 'A confirmação de senha é obrigatória.',\n      validate: {\n        matchesPreviousPassword: function matchesPreviousPassword(value) {\n          var _getValues = getValues(),\n              password = _getValues.password;\n\n          return password === value || 'As senhas não coincidem.';\n        }\n      }\n    },\n    name: \"passwordConfirmation\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }), errors.passwordConfirmation && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 53\n    }\n  }, errors.passwordConfirmation.message)), React.createElement(SubmitButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    color: \"transparent\",\n    title: \"CADASTRAR\",\n    onPress: handleSubmit(onSubmit, onError),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/gabriela/Documentos/EJCM/React/Coliseum-Cliente/src/pages/Register/index.tsx"],"names":["React","useNavigation","useForm","Controller","Container","Content","Title","InputBox","InputLabel","SubmitButton","Input","Register","mode","control","getValues","handleSubmit","errors","onSubmit","data","console","log","onError","navigation","onBlur","onChange","value","required","name","color","message","props","pattern","email","phoneNumber","password","validate","matchesPreviousPassword","passwordConfirmation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Button, TextInput } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { Container, Content, Title, InputBox, InputLabel } from '../styles';\nimport { SubmitButton, Input } from './styles';\n\ninterface RegisterData {\n    name: string,\n    email: string,\n    phoneNumber: string,\n    password: string,\n    passwordConfirmation: string,\n}\n\nexport default function Register() {\n    const { control, getValues, handleSubmit, errors } = useForm({ mode: 'onTouched' });\n    const onSubmit = (data: RegisterData) => { console.log(data) };\n    const onError = (errors: Object) => { console.log(errors) };\n    const navigation = useNavigation();\n\n    return (\n        <Container>\n            <Content>\n                <Title>Crie sua conta</Title>\n                <InputBox>\n                    <InputLabel>Nome</InputLabel>\n                    <Controller\n                        control={control}\n                        render={({ onBlur, onChange, value }) => (\n                            <Input\n                                autoCompleteType='name'\n                                autoCorrect={false}\n                                textContentType='name'\n                                onBlur={onBlur}\n                                onChangeText={(value) => onChange(value)}\n                                value={value}\n                            />\n                        )}\n                        rules={{ required: 'O nome é obrigatório.' }}\n                        name='name'\n                        defaultValue=''\n                    />\n                    {errors.name && <Text style={{ color: 'red' }}>{errors.name.message}</Text>}\n                </InputBox>\n\n                <InputBox>\n                    <InputLabel>E-mail</InputLabel>\n                    <Controller\n                        control={control}\n                        render={(props) => (\n                            <Input\n                                autoCompleteType='email'\n                                autoCorrect={false}\n                                keyboardType='email-address'\n                                textContentType='emailAddress'\n                                onBlur={props.onBlur}\n                                onChangeText={(value) => props.onChange(value)}\n                                value={props.value}\n                            />\n                        )}\n                        rules={{\n                            required: 'O e-mail é obrigatório.',\n                            pattern: {\n                                value: /^\\S+@\\S+$/i,\n                                message: 'Formato de e-mail inválido.'\n                            },\n                        }}\n                        name='email'\n                        defaultValue=''\n                    />\n                    {errors.email && <Text style={{ color: 'red' }}>{errors.email.message}</Text>}\n                </InputBox>\n\n                <InputBox>\n                    <InputLabel>Telefone</InputLabel>\n                    <Controller\n                        control={control}\n                        render={(props) => (\n                            <Input\n                                autoCompleteType='tel'\n                                autoCorrect={false}\n                                keyboardType='phone-pad'\n                                textContentType='telephoneNumber'\n                                onBlur={props.onBlur}\n                                onChangeText={(value) => props.onChange(value)}\n                                value={props.value}\n                            />\n                        )}\n                        rules={{ required: 'O telefone é obrigatório.' }}\n                        name='phoneNumber'\n                        defaultValue=''\n                    />\n                    {errors.phoneNumber && <Text style={{ color: 'red' }}>{errors.phoneNumber.message}</Text>}\n                </InputBox>\n\n                <InputBox>\n                    <InputLabel>Senha</InputLabel>\n                    <Controller\n                        control={control}\n                        render={(props) => (\n                            <Input\n                                secureTextEntry\n                                autoCompleteType='password'\n                                autoCorrect={false}\n                                textContentType='newPassword'\n                                onBlur={props.onBlur}\n                                onChangeText={(value) => props.onChange(value)}\n                                value={props.value}\n                            />\n                        )}\n                        rules={{ required: 'A senha é obrigatória.' }}\n                        name='password'\n                        defaultValue=''\n                    />\n                    {errors.password && <Text style={{ color: 'red' }}>{errors.password.message}</Text>}\n                </InputBox>\n\n                <InputBox>\n                    <InputLabel>Confirmação de senha</InputLabel>\n                    <Controller\n                        control={control}\n                        render={(props) => (\n                            <Input\n                                secureTextEntry\n                                autoCompleteType='password'\n                                autoCorrect={false}\n                                textContentType='password'\n                                onBlur={props.onBlur}\n                                onChangeText={(value) => props.onChange(value)}\n                                value={props.value}\n                            />\n                        )}\n                        rules={{\n                            required: 'A confirmação de senha é obrigatória.',\n                            validate: {\n                                matchesPreviousPassword: (value) => {\n                                    const { password } = getValues();\n                                    return password === value || 'As senhas não coincidem.';\n                                }\n                            }\n                        }}\n                        name='passwordConfirmation'\n                        defaultValue=''\n                    />\n                    {errors.passwordConfirmation && <Text style={{ color: 'red' }}>{errors.passwordConfirmation.message}</Text>}\n                </InputBox>\n                \n                <SubmitButton>\n                    <Button color=\"transparent\" title='CADASTRAR' onPress={handleSubmit(onSubmit, onError)} />\n                </SubmitButton>\n            </Content>\n        </Container>\n    )\n}"]},"metadata":{},"sourceType":"module"}