{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/gabriela/Documentos/EJCM/React/Coliseum-Cliente/src/pages/Tabs/Account/index.tsx\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { InputLabel, Input } from \"../../styles\";\nimport { Header, Title, SubTitle, Content, SubmitButton, Form, FormBox } from \"./styles\";\nimport { useState } from 'react';\nAccount.navigationOptions = {\n  header: null\n};\nexport default function Account() {\n  var _this = this;\n\n  var _useForm = useForm({\n    mode: 'onTouched'\n  }),\n      control = _useForm.control,\n      getValues = _useForm.getValues,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n\n  var onError = function onError(errors) {\n    console.log(errors);\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editPassword = _useState2[0],\n      setEditPassword = _useState2[1];\n\n  return React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Minha Conta\"), React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Veja ou altere os dados de sua conta\")), React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, React.createElement(FormBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, \"Nome\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref) {\n      var onBlur = _ref.onBlur,\n          onChange = _ref.onChange,\n          value = _ref.value;\n      return React.createElement(Input, {\n        autoCompleteType: \"name\",\n        autoCorrect: false,\n        textContentType: \"name\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      });\n    },\n    name: \"name\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }), errors.name && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 41\n    }\n  }, errors.name.message)), React.createElement(FormBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \"E-mail\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(Input, {\n        autoCompleteType: \"email\",\n        autoCorrect: false,\n        keyboardType: \"email-address\",\n        textContentType: \"emailAddress\",\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      });\n    },\n    rules: {\n      pattern: {\n        value: /^\\S+@\\S+$/i,\n        message: 'Formato de e-mail inv√°lido.'\n      }\n    },\n    name: \"email\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }), errors.email && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 42\n    }\n  }, errors.email.message)), React.createElement(FormBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Telefone\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(Input, {\n        autoCompleteType: \"tel\",\n        autoCorrect: false,\n        keyboardType: \"phone-pad\",\n        textContentType: \"telephoneNumber\",\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      });\n    },\n    name: \"phoneNumber\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }), errors.phoneNumber && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 48\n    }\n  }, errors.phoneNumber.message)), React.createElement(FormBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"Senha\"), React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(Input, {\n        placeholder: editPassword ? \"Digite sua senha atual\" : \"**********\",\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        textContentType: \"newPassword\",\n        onBlur: props.onBlur,\n        onFocus: function onFocus() {\n          return setEditPassword(!editPassword);\n        },\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }\n      });\n    },\n    name: \"password\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }), errors.password && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 45\n    }\n  }, errors.password.message)), editPassword && React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, React.createElement(FormBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(Input, {\n        placeholder: \"Digite a nova senha\",\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        textContentType: \"password\",\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      });\n    },\n    rules: {\n      required: 'Digite a nova senha'\n    },\n    name: \"newPassword\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }), errors.newPassword && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 48\n    }\n  }, errors.newPassword.message)), React.createElement(FormBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(Input, {\n        placeholder: \"Confirme a nova senha\",\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        textContentType: \"password\",\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 33\n        }\n      });\n    },\n    rules: {\n      required: 'A confirma√ß√£o de senha √© obrigat√≥ria.',\n      validate: {\n        matchesPreviousPassword: function matchesPreviousPassword(value) {\n          var _getValues = getValues(),\n              newPassword = _getValues.newPassword;\n\n          return newPassword === value || 'As senhas n√£o coincidem.';\n        }\n      }\n    },\n    name: \"passwordConfirmation\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }), errors.passwordConfirmation && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 57\n    }\n  }, errors.passwordConfirmation.message))), React.createElement(SubmitButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    color: \"transparent\",\n    title: \"Salvar Altera\\xE7\\xF5es\",\n    onPress: handleSubmit(onSubmit, onError),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/gabriela/Documentos/EJCM/React/Coliseum-Cliente/src/pages/Tabs/Account/index.tsx"],"names":["React","useForm","Controller","InputLabel","Input","Header","Title","SubTitle","Content","SubmitButton","Form","FormBox","useState","Account","navigationOptions","header","mode","control","getValues","handleSubmit","errors","onSubmit","data","console","log","onError","editPassword","setEditPassword","onBlur","onChange","value","name","color","message","props","pattern","email","phoneNumber","password","required","newPassword","validate","matchesPreviousPassword","passwordConfirmation"],"mappings":"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","sourcesContent":["\nimport React from 'react';\n\nimport { View, Text, Button, TextInput, ScrollView } from 'react-native';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { InputLabel, Input } from '../../styles';\nimport { Header, Title, SubTitle, Content, SubmitButton, Form, FormBox } from './styles';\nimport { useState } from 'react';\n\nAccount.navigationOptions = {\n    header: null,\n  };\n\ninterface EditData {\n    name: string,\n    email: string,\n    phoneNumber: string,\n    password: string,\n    newPassword: string,\n    passwordConfirmation: string,\n}\n\nexport default function Account() {\n\n    const { control, getValues, handleSubmit, errors } = useForm({ mode: 'onTouched' });\n    const onSubmit = (data: EditData) => { console.log(data) };\n    const onError = (errors: Object) => { console.log(errors) };\n\n    const [editPassword, setEditPassword] = useState(false);\n\n    return(\n        <Content>\n            <ScrollView>\n                <Header>\n                    <Title>Minha Conta</Title>\n                    <SubTitle>Veja ou altere os dados de sua conta</SubTitle>\n                </Header>\n\n                <Form>\n                    <FormBox>\n                        <InputLabel>Nome</InputLabel>\n                        <Controller\n                            control={control}\n                            render={({ onBlur, onChange, value }) => (\n                                <Input\n                                    autoCompleteType='name'\n                                    autoCorrect={false}\n                                    textContentType='name'\n                                    onBlur={onBlur}\n                                    onChangeText={(value) => onChange(value)}\n                                    value={value}\n                                />\n                            )}\n                            name='name'\n                            defaultValue=''\n                        />\n                        {errors.name && <Text style={{ color: 'red' }}>{errors.name.message}</Text>}\n                    </FormBox>\n\n                    <FormBox>\n                        <InputLabel>E-mail</InputLabel>\n                        <Controller\n                            control={control}\n                            render={(props) => (\n                                <Input\n                                    autoCompleteType='email'\n                                    autoCorrect={false}\n                                    keyboardType='email-address'\n                                    textContentType='emailAddress'\n                                    onBlur={props.onBlur}\n                                    onChangeText={(value) => props.onChange(value)}\n                                    value={props.value}\n                                />\n                            )}\n                            rules={{\n                                pattern: {\n                                    value: /^\\S+@\\S+$/i,\n                                    message: 'Formato de e-mail inv√°lido.'\n                                },\n                            }}\n                            name='email'\n                            defaultValue=''\n                        />\n                        {errors.email && <Text style={{ color: 'red' }}>{errors.email.message}</Text>}\n                    </FormBox>\n\n                    <FormBox>\n                        <InputLabel>Telefone</InputLabel>\n                        <Controller\n                            control={control}\n                            render={(props) => (\n                                <Input\n                                    autoCompleteType='tel'\n                                    autoCorrect={false}\n                                    keyboardType='phone-pad'\n                                    textContentType='telephoneNumber'\n                                    onBlur={props.onBlur}\n                                    onChangeText={(value) => props.onChange(value)}\n                                    value={props.value}\n                                />\n                            )}\n                            name='phoneNumber'\n                            defaultValue=''\n                        />\n                        {errors.phoneNumber && <Text style={{ color: 'red' }}>{errors.phoneNumber.message}</Text>}\n                    </FormBox>\n\n                    <FormBox>\n                        <InputLabel>Senha</InputLabel>\n                        <Controller\n                            control={control}\n                            render={(props) => (\n                                <Input\n                                    placeholder={ editPassword ? \"Digite sua senha atual\" : \"**********\"}\n                                    secureTextEntry\n                                    autoCompleteType='password'\n                                    autoCorrect={false}\n                                    textContentType='newPassword'\n                                    onBlur={props.onBlur}\n                                    onFocus={() => setEditPassword(!editPassword)}\n                                    onChangeText={(value) => props.onChange(value)}\n                                    value={props.value}\n                                />\n                            )}\n                            name='password'\n                            defaultValue=''\n                        />\n                        {errors.password && <Text style={{ color: 'red' }}>{errors.password.message}</Text>}\n                    </FormBox>\n                            \n                    { editPassword &&\n                    <Form>\n                        <FormBox>\n                        <Controller\n                            control={control}\n                            render={(props) => (\n                                <Input\n                                    placeholder=\"Digite a nova senha\"\n                                    secureTextEntry\n                                    autoCompleteType='password'\n                                    autoCorrect={false}\n                                    textContentType='password'\n                                    onBlur={props.onBlur}\n                                    onChangeText={(value) => props.onChange(value)}\n                                    value={props.value}\n                                />\n                            )}\n                            rules={{required: 'Digite a nova senha'}}\n                            name='newPassword'\n                            defaultValue=''\n                        />\n                        {errors.newPassword && <Text style={{ color: 'red' }}>{errors.newPassword.message}</Text>}\n                    </FormBox>\n\n                        <FormBox>\n\n                        <Controller\n                            control={control}\n                            render={(props) => (\n                                <Input\n                                    placeholder=\"Confirme a nova senha\"\n                                    secureTextEntry\n                                    autoCompleteType='password'\n                                    autoCorrect={false}\n                                    textContentType='password'\n                                    onBlur={props.onBlur}\n                                    onChangeText={(value) => props.onChange(value)}\n                                    value={props.value}\n                                />\n                            )}\n                            rules={{\n                                required: 'A confirma√ß√£o de senha √© obrigat√≥ria.',\n                                validate: {\n                                    matchesPreviousPassword: (value) => {\n                                        const { newPassword } = getValues();\n                                        return newPassword === value || 'As senhas n√£o coincidem.';\n                                    }\n                                }\n                            }}\n                            name='passwordConfirmation'\n                            defaultValue=''\n                        />\n                        {errors.passwordConfirmation && <Text style={{ color: 'red' }}>{errors.passwordConfirmation.message}</Text>}\n                    </FormBox>\n                    </Form>\n                    }\n                    <SubmitButton> \n                        <Button color=\"transparent\" title='Salvar Altera√ß√µes' onPress={handleSubmit(onSubmit, onError)} />\n                    </SubmitButton>\n                </Form>\n            </ScrollView>\n        </Content>\n    );\n}"]},"metadata":{},"sourceType":"module"}