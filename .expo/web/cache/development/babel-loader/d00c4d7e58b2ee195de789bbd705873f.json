{"ast":null,"code":"var _jsxFileName = \"/home/gabriela/Documentos/EJCM/React/Coliseum-Cliente/src/pages/Login/index.tsx\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Container, WhiteBox, Header, Title, SubTitle, Form, InputBox, Input, ButtonContainer, LoginButton, RegisterButton, LoginText, RegisterText } from \"./styles\";\nexport default function Login() {\n  var _this = this;\n\n  var _useForm = useForm({\n    mode: 'onTouched'\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n\n  var onError = function onError(errors) {\n    console.log(errors);\n  };\n\n  var navigation = useNavigation();\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(WhiteBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"Sextou?\"), React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Deixa que achamos a divers\\xE3o.\")), React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, React.createElement(InputBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(Input, {\n        placeholder: \"E-mail\",\n        autoCompleteType: \"email\",\n        autoCorrect: false,\n        keyboardType: \"email-address\",\n        textContentType: \"emailAddress\",\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      });\n    },\n    rules: {\n      required: 'O e-mail é obrigatório.',\n      pattern: {\n        value: /^\\S+@\\S+$/i,\n        message: 'Formato de e-mail inválido.'\n      }\n    },\n    name: \"email\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }), errors.email && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 42\n    }\n  }, errors.email.message)), React.createElement(InputBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, React.createElement(Controller, {\n    control: control,\n    render: function render(props) {\n      return React.createElement(Input, {\n        placeholder: \"Senha\",\n        secureTextEntry: true,\n        autoCompleteType: \"password\",\n        autoCorrect: false,\n        textContentType: \"password\",\n        onBlur: props.onBlur,\n        onChangeText: function onChangeText(value) {\n          return props.onChange(value);\n        },\n        value: props.value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      });\n    },\n    rules: {\n      required: 'A senha é obrigatória.'\n    },\n    name: \"password\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }), errors.password && React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 45\n    }\n  }, errors.password.message)), React.createElement(ButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, React.createElement(LoginButton, {\n    onPress: function onPress() {\n      handleSubmit(onSubmit, onError);\n      navigation.navigate('Tabs');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, React.createElement(LoginText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, \"ENTRAR\"))), React.createElement(ButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, React.createElement(RegisterButton, {\n    onPress: function onPress() {\n      return navigation.navigate('Register');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, React.createElement(RegisterText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, \"CADASTRAR-SE\"))))));\n}","map":{"version":3,"sources":["/home/gabriela/Documentos/EJCM/React/Coliseum-Cliente/src/pages/Login/index.tsx"],"names":["React","useNavigation","useForm","Controller","Container","WhiteBox","Header","Title","SubTitle","Form","InputBox","Input","ButtonContainer","LoginButton","RegisterButton","LoginText","RegisterText","Login","mode","control","handleSubmit","errors","onSubmit","data","console","log","onError","navigation","props","onBlur","value","onChange","required","pattern","message","email","color","password","navigate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Button, TextInput } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { Container, WhiteBox, Header, Title, SubTitle, Form, InputBox, Input, ButtonContainer, LoginButton, RegisterButton, LoginText, RegisterText } from './styles';\n\ninterface FormData {\n    email: string;\n    password: string;\n}\n\nexport default function Login() {\n    const { control, handleSubmit, errors } = useForm({ mode: 'onTouched' });\n    const onSubmit = (data: FormData) => { console.log(data) };\n    const onError = (errors: Object) => { console.log(errors) };\n    const navigation = useNavigation();\n    \n\n    return (\n        <Container>\n            <WhiteBox>\n                <Header>\n                    <Title>Sextou?</Title>\n                    <SubTitle>Deixa que achamos a diversão.</SubTitle>\n                </Header>\n                <Form>\n                    <InputBox>\n                        <Controller\n                            control={control}\n                            render={(props) => (\n                                <Input\n                                    placeholder=\"E-mail\"\n                                    autoCompleteType='email'\n                                    autoCorrect={false}\n                                    keyboardType='email-address'\n                                    textContentType='emailAddress'\n                                    onBlur={props.onBlur}\n                                    onChangeText={(value) => props.onChange(value)}\n                                    value={props.value}\n                                />\n                            )}\n                            rules={{\n                                required: 'O e-mail é obrigatório.',\n                                pattern: {\n                                    value: /^\\S+@\\S+$/i,\n                                    message: 'Formato de e-mail inválido.'\n                                },\n                            }}\n                            name='email'\n                            defaultValue=''\n                        />\n                        {errors.email && <Text style={{ color: 'red' }}>{errors.email.message}</Text>}\n                    </InputBox>\n                    <InputBox>\n                        <Controller\n                            control={control}\n                            render={(props) => (\n                                <Input\n                                    placeholder=\"Senha\"\n                                    secureTextEntry\n                                    autoCompleteType='password'\n                                    autoCorrect={false}\n                                    textContentType='password'\n                                    onBlur={props.onBlur}\n                                    onChangeText={(value) => props.onChange(value)}\n                                    value={props.value}\n                                />\n                            )}\n                            rules={{ required: 'A senha é obrigatória.' }}\n                            name='password'\n                            defaultValue=''\n                        />\n                        {errors.password && <Text style={{ color: 'red' }}>{errors.password.message}</Text>}\n                    </InputBox>\n                    <ButtonContainer>\n                        <LoginButton onPress={() => {handleSubmit(onSubmit, onError); navigation.navigate('Tabs');}}>\n                            <LoginText>ENTRAR</LoginText>\n                        </LoginButton>\n                    </ButtonContainer>\n                    <ButtonContainer>\n                        <RegisterButton onPress={() => navigation.navigate('Register')}>\n                            <RegisterText>CADASTRAR-SE</RegisterText>\n                        </RegisterButton>\n                    </ButtonContainer>\n                </Form>\n            </WhiteBox>\n        </Container>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}